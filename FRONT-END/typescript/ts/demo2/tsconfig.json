{
  "extends": "./tsconfig.base.json",
  // 可覆盖base配置
  "exclude": [],
  "compileOnSave": false,
  "compilerOptions": {
    /* Basic Options */
    // "incremental": true,                // 增量编译 
    // "tsBuildInfoFile": "./buildFile",       // 增量编译文件的存储位置
    // "diagnostics": true,                // 打印诊断信息
   
    "target": "es5",                          /* 目标语言的标准: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "commonjs",                     /* 生成代码的模块标准: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    // "outFile": "./out",                       /* 将多个相互依赖的文件生成一个文件，可用在AMD模块中  */
   
    // "lib": [],                             /* TS需要引用的库，即声明文件，es5默认“dom”，"es5", "scripthost" */
   
    // "allowJs": true,                       /* 允许编译js文件（js、jsx） */
    // "checkJs": true,                       /* 允许在js文件中报错，通常与allowjs一起使用 */
    // "outDir": "./",                        /* 指定输出目录 */
    // "rootDir": "./src",                       /* 指定输入文件目录（用于控制输出目录结构）*/
    
    // "declaration": true,                   /* 生成声明文件 '.d.ts' file. */
    //"declarationDir": "./d",                  // 声明文件的路径
    //"emitDeclarationOnly": true,             // 只生成声明文件
    // "sourceMap": true,                     /* 生成目标文件的sourceMap '.map' file. */
    "inlineSourceMap": true,                  // 生成目标文件的inline sourceMap
    // "declarationMap": true,                /* 生成声明文件的sourceMap '.d.ts' file. */
    // "typeRoots": [],                       /* 声明文件目录， 默认 node_module/@types */
    // "types": [],                           /* 声明文件包. */
    
    // "removeComments": true,                /* 删除注释 */
    
    // "noEmit": true,                        /* 不输出文件 */
    // "noEmitOnError": true,                    // 发生错误时不输出文件
    
    // "noEmitHelpers": true,                    // 不生成helper函数，需要额外安装ts-helpers
    // "importHelpers": true,                    // 通过tslib引入helper函数，文件必须是模块，可以减小编译后的体积
  
    // "downlevelIteration": true,            /* 降级遍历器、rovide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
  
    "strict": true,                           /* Enable all strict type-checking options. */
    "alwaysStrict": false,                    // 在代码中注入 “use strict"
    // "noImplicitAny": true,                 /* 不允许隐式的any类型. */
    // "strictNullChecks": true,              /* 不允许把null、undefined赋值给其他类型变量 */
    // "strictFunctionTypes": true,           /* 不允许函数参数双向协定. */
    // "strictPropertyInitialization": true,  /* 类的实例属性必须初始化 */
    // "strictBindCallApply": true,           /* 严格的bind/call/apply 检查 */
    // "noImplicitThis": true,                /* 不允许this有隐式的any类型. */

    // "noUnusedLocals": true,                /* 检查只声明未使用的局部变量 */
    // "noUnusedParameters": true,            /* 检查未使用的函数参数 */
    // "noFallthroughCasesInSwitch": true,    /* 防止switch语句贯穿 */
    // "noImplicitReturns": true,             /* 每个分之都要有返回值 */
    
    "esModuleInterop": true,                  /* 允许export = 导出，由import from 导入,也可用import = */
    "allowUmdGlobalAccess": true,             /* 允许在模块中访问UMD全局变量 */
    // "moduleResolution": "node",            /* 模块解析策略 还有classic*/
    // "baseUrl": "./",                       /* 解析非相对模块的基地址,默认未node_modules目录下 */
    // "paths": {                           /* 路径映射，相当于baseUrl */
    // “jquery": ["node_modules/jquery/dist/jquery.slim.min.js"]
    // },
    // "rootDirs": ["src", "out"],                        /* 将多个目录放在一个虚拟目录下，用于运行时, */
   
    "listEmittedFiles": true,                 // 打印输出的文件
    "listFiles": true,                        // 打印编译的文件（包括引用的声明文件）
  
  
    // "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    // "composite": true,                     /* Enable project compilation */
    // "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */
    // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    /* Strict Type-Checking Options */
    // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
    /* Additional Checks */
    // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
    /* Experimental Options */
    // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
    /* Advanced Options */
    "forceConsistentCasingInFileNames": true  /* Disallow inconsistently-cased references to the same file. */
  }
}